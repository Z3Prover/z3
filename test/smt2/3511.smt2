(set-option :model_validate true)
(set-option :model true)
(set-option :smt.arith.greatest_error_pivot false)
(set-option :smt.theory_aware_branching false)
(set-option :smt.arith.random_initial_value false)
(set-option :smt.dack.eq true)
(set-option :smt.mbqi true)
(set-option :smt.arith.min true)
(set-option :smt.arith.bprop_on_pivoted_rows true)
(set-option :rewriter.cache_all true)
(set-option :rewriter.flat false)
(set-option :rewriter.arith_lhs true)
(set-option :rewriter.arith_ineq_lhs false)
(set-option :rewriter.bv_le_extra false)
(set-option :rewriter.bv_sort_ac false)
(set-option :rewriter.blast_eq_value true)
(set-option :solver.enforce_model_conversion true)
(set-option :model.inline_def false)
(set-option :smt.arith.solver 6)
(declare-const v0 Bool)
(declare-const v1 Bool)
(declare-const v2 Bool)
(declare-const v3 Bool)
(declare-const v4 Bool)
(declare-const v5 Bool)
(declare-const v6 Bool)
(declare-const v7 Bool)
(declare-const v8 Bool)
(declare-const v9 Bool)
(declare-const v10 Bool)
(declare-const v11 Bool)
(declare-const v12 Bool)
(declare-const v13 Bool)
(declare-const v14 Bool)
(declare-const v15 Bool)
(declare-const v16 Bool)
(declare-const i1 Int)
(declare-const i2 Int)
(declare-const i4 Int)
(declare-const i6 Int)
(declare-const i9 Int)
(declare-const i11 Int)
(declare-const v17 Bool)
(assert (not (exists ((q0 Bool) (q1 Int) (q2 Int) (q3 Int)) v9)))
(declare-const v18 Bool)
(assert (not (exists ((q4 Int) (q5 Int) (q6 Int) (q7 Int)) v3)))
(declare-const v19 Bool)
(assert (not (forall ((q8 Int) (q9 Bool) (q10 Bool) (q11 Bool)) (=> (= q10 q10 v10 q10 v3) (< (div 15 (abs i1)) 25)))))
(assert (or (forall ((q8 Int) (q9 Bool) (q10 Bool) (q11 Bool)) v15) (exists ((q8 Int) (q9 Bool) (q10 Bool) (q11 Bool)) (not (<= q8 (div 15 (abs i1)))))))
(declare-const v20 Bool)
(check-sat-using (then simplify purify-arith solve-eqs qe-light propagate-values elim-small-bv fix-dl-var max-bv-sharing dom-simplify normalize-bounds ctx-solver-simplify  smt))
