(set-option :model_validate true)
(set-option :model true)
(set-option :smt.arith.min true)
(set-option :smt.arith.greatest_error_pivot true)
(set-option :smt.arith.auto_config_simplex false)
(set-option :smt.theory_aware_branching true)
(set-option :sat.bce false)
(set-option :sat.acce true)
(set-option :sat.branching.anti_exploration true)
(set-option :sat.scc true)
(set-option :rewriter.arith_ineq_lhs false)
(set-option :rewriter.cache_all true)
(set-option :rewriter.bvnot2arith  false)
(set-option :solver.enforce_model_conversion true)
(set-option :model.inline_def false)
(set-option :nlsat.reorder false)
(set-option :nlsat.check_lemmas true)
(set-option :nlsat.shuffle_vars true)
(set-option :nlsat.minimize_conflicts true)
(set-option :nlsat.factor true)
(set-option :smt.phase_selection 2)
(declare-const v0 Bool)
(declare-const v1 Bool)
(declare-const v2 Bool)
(declare-const v3 Bool)
(declare-const v4 Bool)
(declare-const v5 Bool)
(declare-const v6 Bool)
(declare-const v7 Bool)
(declare-const v8 Bool)
(declare-const v9 Bool)
(declare-const v10 Bool)
(declare-const v11 Bool)
(declare-const i2 Int)
(declare-const i3 Int)
(declare-const i4 Int)
(declare-const v12 Bool)
(assert v7)
(push 1)
(pop 1)
(declare-const v13 Bool)
(assert (= v13 (= (mod i2 i2) (mod i2 i2)) v3 v5 v12 v5 v12 (= (mod i2 i2) 3) v7))
(declare-const v14 Bool)
(assert (forall ((q0 Int) (q1 Bool) (q2 Int) (q3 Bool)) (=> (or v12 v11 v6 q1 v11 (= (mod i2 i2) (mod i2 i2)) q1) (= q0 (div i3 i4)))))
(assert (not v4))
(assert (= (mod i2 i2) (mod i2 i2)))
(push 1)
(declare-const v15 Bool)
(check-sat)
(assert (or v9 (< 10 45) v11 v8))
(declare-const v16 Bool)
(assert v3)
(push 1)
(declare-const v17 Bool)
(assert (forall ((q4 Bool) (q5 Bool) (q6 Bool) (q7 Int)) (not (distinct v14 v13 v8 v7))))
(assert (exists ((q8 Bool) (q9 Bool)) (not (xor q8 q9 q9 q8 (= v8 v16 (not v2) v1 (= (mod i2 i2) 3) (not v2) v12 v17 v4 v1 v11) q8 (= (mod i2 i2) 3)))))
(assert (forall ((q10 Bool)) (not (=> q10 v6))))
(assert (=> (= v13 (= (mod i2 i2) (mod i2 i2)) v3 v5 v12 v5 v12 (= (mod i2 i2) 3) v7) (= (mod i2 i2) (mod i2 i2))))
(assert v11)
(check-sat)
(declare-const v18 Bool)
(pop 1)
(declare-const v19 Bool)
(declare-const v20 Bool)
(declare-const v21 Bool)
(declare-const i8 Int)
(assert (= v20 v13 v2 (= v13 (= (mod i2 i2) (mod i2 i2)) v3 v5 v12 v5 v12 (= (mod i2 i2) 3) v7) (= (mod i2 i2) (mod i2 i2)) (not v4) v13 (not v0) v20 (distinct i3 (abs i3)) (=> (< 10 45) v4)))
(declare-const v22 Bool)
(assert v15)
(assert v15)
(declare-const i9 Int)
(assert (or v1 (= (mod i2 i2) (mod i2 i2)) v8 (= 3 i2) v13))
(declare-const v23 Bool)
(assert (not v2))
(pop 1)
(assert (=> (= (mod i2 i2) (mod i2 i2)) v6))
(assert v7)
(assert (and v10 v5 (= (mod i2 i2) (mod i2 i2)) v1 (not v4) (not v2) v4 v5 v3))
(declare-const v24 Bool)
(assert (and (= (mod i2 i2) 3) (and v10 v5 (= (mod i2 i2) (mod i2 i2)) v1 (not v4) (not v2) v4 v5 v3) v4 (not v2) v9 v9 (> (+ 98 45 (mod i2 i2) 766 804) 98) v3 v1 (not v2)))
(assert (not v24))
(declare-const v25 Bool)
(assert (exists ((q11 Int) (q12 Bool) (q13 Bool) (q14 Bool)) (=> (distinct q12 (< 45 10) q12 (= (mod i2 i2) (mod i2 i2)) (= (mod i2 i2) (mod i2 i2)) v3 q13 v3 q13) (>= q11 q11))))
(assert (xor (> (+ 98 45 (mod i2 i2) 766 804) 98) v9 v14 (= (mod i2 i2) 3) v25 v1 (=> (< 10 45) v4) (< 808 804)))
(push 1)
(assert (forall ((q15 Int) (q16 Bool) (q17 Bool)) v6))
(assert (and v13 v13 (not v24) (=> (= (mod i2 i2) (mod i2 i2)) v6) v10 v9 v8 (xor v9 v3 (= v13 (= (mod i2 i2) (mod i2 i2)) v3 v5 v12 v5 v12 (= (mod i2 i2) 3) v7) (not v2) (=> (< 10 45) v4) (=> (< 10 45) v4) v13) v12 (= (mod i2 i2) 3) v7))
(declare-const v26 Bool)
(assert v10)
(check-sat)
(declare-const v27 Bool)
(assert v9)
(declare-const i10 Int)
(assert (xor (= v13 (= (mod i2 i2) (mod i2 i2)) v3 v5 v12 v5 v12 (= (mod i2 i2) 3) v7) (< 45 10) v9 v13 v7 v6 (and v13 v13 (not v24) (=> (= (mod i2 i2) (mod i2 i2)) v6) v10 v9 v8 (xor v9 v3 (= v13 (= (mod i2 i2) (mod i2 i2)) v3 v5 v12 v5 v12 (= (mod i2 i2) 3) v7) (not v2) (=> (< 10 45) v4) (=> (< 10 45) v4) v13) v12 (= (mod i2 i2) 3) v7) (< 808 804)))
(push 1)
(assert (or v27 v2))
(declare-const v28 Bool)
(assert (forall ((q18 Int) (q19 Int) (q20 Bool) (q21 Int)) (=> (or q20 v7) (= q18 i3))))
(assert (not (< 10 45)))
(pop 1)
(assert (= (> (+ 98 45 (mod i2 i2) 766 804) 98) v8 (and v10 v5 (= (mod i2 i2) (mod i2 i2)) v1 (not v4) (not v2) v4 v5 v3) v1 v1))
(declare-const v29 Bool)
(declare-const v30 Bool)
(assert (and v11 v14))
(declare-const v31 Bool)
(declare-const i11 Int)
(check-sat)
(push 1)
(declare-const v32 Bool)
(assert v14)
(declare-const v33 Bool)
(push 1)
(declare-const v34 Bool)
(push 1)
(pop 1)
(assert v1)
(declare-const v35 Bool)
(declare-const i12 Int)
(assert (and v10 v5 (= (mod i2 i2) (mod i2 i2)) v1 (not v4) (not v2) v4 v5 v3))
(declare-const v36 Bool)
(declare-const i13 Int)
(push 1)
(push 1)
(declare-const v37 Bool)
(push 1)
(declare-const v38 Bool)
(assert (= 79 375))
(pop 1)
(declare-const v39 Bool)
(assert v39)
(declare-const v40 Bool)
(pop 1)
(assert v31)
(declare-const v41 Bool)
(declare-const i14 Int)
(declare-const v42 Bool)
(declare-const v43 Bool)
(pop 1)
(declare-const v44 Bool)
(declare-const i15 Int)
(assert (exists ((q22 Bool) (q23 Int) (q24 Int) (q25 Bool)) (not (<= q23 623))))
(pop 1)
(assert (exists ((q26 Bool)) (not (xor (= (mod i2 i2) 3) v25 q26 q26 q26 v26))))
(declare-const i16 Int)
(check-sat)
(push 1)
(declare-const v45 Bool)
(assert (and (> (+ 98 45 (mod i2 i2) 766 804) 98) v45 v33 (and v13 v13 (not v24) (=> (= (mod i2 i2) (mod i2 i2)) v6) v10 v9 v8 (xor v9 v3 (= v13 (= (mod i2 i2) (mod i2 i2)) v3 v5 v12 v5 v12 (= (mod i2 i2) 3) v7) (not v2) (=> (< 10 45) v4) (=> (< 10 45) v4) v13) v12 (= (mod i2 i2) 3) v7) v26 (xor v9 v3 (= v13 (= (mod i2 i2) (mod i2 i2)) v3 v5 v12 v5 v12 (= (mod i2 i2) 3) v7) (not v2) (=> (< 10 45) v4) (=> (< 10 45) v4) v13) (= v2 v6 (=> (= (mod i2 i2) (mod i2 i2)) v6) (and v11 v14) (not v8) (not v8) v29 v2) (not v9) (= v2 v6 (=> (= (mod i2 i2) (mod i2 i2)) v6) (and v11 v14) (not v8) (not v8) v29 v2) (and v13 v13 (not v24) (=> (= (mod i2 i2) (mod i2 i2)) v6) v10 v9 v8 (xor v9 v3 (= v13 (= (mod i2 i2) (mod i2 i2)) v3 v5 v12 v5 v12 (= (mod i2 i2) 3) v7) (not v2) (=> (< 10 45) v4) (=> (< 10 45) v4) v13) v12 (= (mod i2 i2) 3) v7) (= (mod i2 i2) 3)))
(pop 1)
(declare-const v46 Bool)
(declare-const i17 Int)
(assert (= v13 (= (mod i2 i2) (mod i2 i2)) v3 v5 v12 v5 v12 (= (mod i2 i2) 3) v7))
(assert (forall ((q27 Bool)) (not (xor (= (> (+ 98 45 (mod i2 i2) 766 804) 98) v8 (and v10 v5 (= (mod i2 i2) (mod i2 i2)) v1 (not v4) (not v2) v4 v5 v3) v1 v1) v13))))
(assert v33)
(check-sat)
(check-sat)
(assert (xor v26 v7 (not v9) (= (- (+ 98 45 (mod i2 i2) 766 804)) 389) (=> (< 10 45) v4) (not v9) (and (= (mod i2 i2) 3) (and v10 v5 (= (mod i2 i2) (mod i2 i2)) v1 (not v4) (not v2) v4 v5 v3) v4 (not v2) v9 v9 (> (+ 98 45 (mod i2 i2) 766 804) 98) v3 v1 (not v2))))
(assert (xor v31 v14 (xor (< 45 10) (not v4) v0) v7))
(declare-const v47 Bool)
(check-sat)
(declare-const v48 Bool)
(check-sat)
(declare-const v49 Bool)
(assert (distinct (xor v8 (=> (< 10 45) v4) v12 (distinct (= 79 375) (distinct (mod i2 i2) 808) (distinct (mod i2 i2) 808) (distinct (mod i2 i2) 808) (and v11 v14) v27 (not v8)) (= (> (+ 98 45 (mod i2 i2) 766 804) 98) v8 (and v10 v5 (= (mod i2 i2) (mod i2 i2)) v1 (not v4) (not v2) v4 v5 v3) v1 v1) v27 (< 808 804)) (=> (not v2) v24) (xor (= v13 (= (mod i2 i2) (mod i2 i2)) v3 v5 v12 v5 v12 (= (mod i2 i2) 3) v7) (< 45 10) v9 v13 v7 v6 (and v13 v13 (not v24) (=> (= (mod i2 i2) (mod i2 i2)) v6) v10 v9 v8 (xor v9 v3 (= v13 (= (mod i2 i2) (mod i2 i2)) v3 v5 v12 v5 v12 (= (mod i2 i2) 3) v7) (not v2) (=> (< 10 45) v4) (=> (< 10 45) v4) v13) v12 (= (mod i2 i2) 3) v7) (< 808 804)) v25 (distinct (div i2 808) 623) (< i3 (div i3 i4)) (and v11 v14) (xor v8 (=> (< 10 45) v4) v12 (distinct (= 79 375) (distinct (mod i2 i2) 808) (distinct (mod i2 i2) 808) (distinct (mod i2 i2) 808) (and v11 v14) v27 (not v8)) (= (> (+ 98 45 (mod i2 i2) 766 804) 98) v8 (and v10 v5 (= (mod i2 i2) (mod i2 i2)) v1 (not v4) (not v2) v4 v5 v3) v1 v1) v27 (< 808 804)) (= v7 (xor (= v13 (= (mod i2 i2) (mod i2 i2)) v3 v5 v12 v5 v12 (= (mod i2 i2) 3) v7) (< 45 10) v9 v13 v7 v6 (and v13 v13 (not v24) (=> (= (mod i2 i2) (mod i2 i2)) v6) v10 v9 v8 (xor v9 v3 (= v13 (= (mod i2 i2) (mod i2 i2)) v3 v5 v12 v5 v12 (= (mod i2 i2) 3) v7) (not v2) (=> (< 10 45) v4) (=> (< 10 45) v4) v13) v12 (= (mod i2 i2) 3) v7) (< 808 804)) v9 (= 79 375) (not v9) v12 (=> (= (mod i2 i2) (mod i2 i2)) v6)) v30 v7))
(assert (< 79 (div 245 i10)))
(pop 1)
(declare-const v50 Bool)
(assert (and v10 v5 (= (mod i2 i2) (mod i2 i2)) v1 (not v4) (not v2) v4 v5 v3))
(assert (xor (> (+ 98 45 (mod i2 i2) 766 804) 98) v9 v14 (= (mod i2 i2) 3) v25 v1 (=> (< 10 45) v4) (< 808 804)))
(pop 1)
(declare-const v51 Bool)
(declare-const v52 Bool)
(assert (=> (not v2) v24))
(declare-const v53 Bool)
(declare-const i18 Int)
(assert v0)
(declare-const i19 Int)
(assert v3)
(declare-const v54 Bool)
(declare-const v55 Bool)
(declare-const i20 Int)
(assert (= (< 45 10) v11 (= v13 (= (mod i2 i2) (mod i2 i2)) v3 v5 v12 v5 v12 (= (mod i2 i2) 3) v7) (< 10 45)))
(push 1)
(declare-const v56 Bool)
(push 1)
(check-sat)
(declare-const v57 Bool)
(assert (=> v52 v14))
(declare-const i21 Int)
(assert (distinct v10 (>= (mod (div i18 i3) 247) 79) v7 (< 10 45)))
(declare-const v58 Bool)
(declare-const i22 Int)
(pop 1)
(assert (or v13 (or (= v13 (= (mod i2 i2) (mod i2 i2)) v3 v5 v12 v5 v12 (= (mod i2 i2) 3) v7) (< 10 45) (< 808 804) (= v13 (= (mod i2 i2) (mod i2 i2)) v3 v5 v12 v5 v12 (= (mod i2 i2) 3) v7)) v24 v25))
(assert (not v24))
(declare-const v59 Bool)
(assert v4)
(declare-const v60 Bool)
(declare-const i23 Int)
(assert (< 808 804))
(check-sat)
(exit)
