(set-option :model_validate true)
(declare-fun b (Int Int Int) Int)
(declare-fun c () Int)
(declare-fun d (Int) Bool)
(declare-fun e (Int Int Int) Int)
(declare-fun f (Int Int Int) Bool)
(assert (let ((a!1 (- (* 3 (b (b c c c) c c)) (b c c c)))
      (a!3 (- (* 3 (b (b c c c) c c)) (e 0 0 0)))
      (a!4 (- (* 3 (b (b c c c) c c))))
      (a!6 (f 0 0 (e (e 0 0 0) 0 0)))
      (a!8 (* 4 (- (* (- 3) (b c c c))))))
(let ((a!2 (ite (distinct 0 (* a!1)) (* 3 (b (b c c c) c c)) (* 4 3)))
      (a!5 (< a!3 (ite (d (- a!4)) 1 0)))
      (a!7 (ite a!6 a!4 (- (b (b c c c) c c))))
      (a!9 (ite (= a!3 0) a!8 (ite (d (- a!4)) 1 0))))
(let ((a!10 (f a!2
               0
               (ite (<= 0 c) (ite a!5 0 a!7) (ite (< 0 0) 0 (ite a!6 a!9 a!4)))))
      (a!11 (ite (= (* (- 3) (b c c c)) (ite (d a!8) 1 0)) (- c) a!2)))
(let ((a!12 (> a!9 (ite (> 0 (- a!4)) (b (b c c c) c c) a!11))))
  (= a!10 a!12))))))
(check-sat)
