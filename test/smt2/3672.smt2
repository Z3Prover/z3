(set-logic QF_BV)
(set-option :smt.clause_proof true)
(set-option :nlsat.randomize false)
(declare-const v0 Bool)
(declare-const v1 Bool)
(declare-const v2 Bool)
(declare-const v3 Bool)
(declare-const v4 Bool)
(declare-const v5 Bool)
(declare-const v6 Bool)
(declare-const v7 Bool)
(declare-const bv_3-0 (_ BitVec 3))
(push 1)
(declare-const v8 Bool)
(declare-const v9 Bool)
(assert (or v6 (= v3 v3) v3))
(assert (or (= v3 v3) v2 v4))
(assert (or v3 v3 v2))
(assert (or v1 (and (= v3 v3) v2 (= v3 v3)) v2))
(assert (or v4 (distinct #x2ed #x2ed #x2ed) (not (bvult #x2ed #x2ed))))
(assert (or v2 (not (bvult #x2ed #x2ed)) v7))
(assert (or (and (= v3 v3) v2 (= v3 v3)) v3 v5))
(assert (or (= v3 v3) (not (bvult #x2ed #x2ed)) (= v3 v3)))
(assert (or (xor v5 (= v0 v0 v2 v0 v0 v3 v1 v0 v2 v3 v1) v1 (bvule #x2ed #x2ed) v2) v7 v1))
(assert (or v1 v5 v7))
(assert (or v4 (= v0 v0 v2 v0 v0 v3 v1 v0 v2 v3 v1) (distinct #x2ed #x2ed #x2ed)))
(assert (or (= v0 v0 v2 v0 v0 v3 v1 v0 v2 v3 v1) v3 (= v0 v0 v2 v0 v0 v3 v1 v0 v2 v3 v1)))
(check-sat-using (then simplify bit-blast (par-or qfnra qfuf nlsat)))
